service:
  name: threebox-verification-service-v2

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-offline

provider:
  name: aws
  runtime: nodejs14.x
  stage: develop
  region: us-east-2
  stackTags:
    IdentityLink: ${opt:stage, ''}
  environment:
    REDIS_URL:
      "Fn::GetAtt": [ElasticCacheCluster, RedisEndpoint.Address]
    VERIFICATION_ISSUER_DOMAIN: ${self:custom.secrets.VERIFICATION_ISSUER_DOMAIN}
    KEYPAIR_PUBLIC_KEY: ${self:custom.secrets.KEYPAIR_PUBLIC_KEY}
    KEYPAIR_PRIVATE_KEY: ${self:custom.secrets.KEYPAIR_PRIVATE_KEY}
    GITHUB_PERSONAL_ACCESS_TOKEN: ${self:custom.secrets.GITHUB_PERSONAL_ACCESS_TOKEN}
    TWITTER_CONSUMER_KEY: ${self:custom.secrets.TWITTER_CONSUMER_KEY}
    TWITTER_CONSUMER_SECRET: ${self:custom.secrets.TWITTER_CONSUMER_SECRET}
    TWITTER_ACCESS_TOKEN: ${self:custom.secrets.TWITTER_ACCESS_TOKEN}
    TWITTER_ACCESS_TOKEN_SECRET: ${self:custom.secrets.TWITTER_ACCESS_TOKEN_SECRET}
    INSTAGRAM_CLIENT_ID: ${self:custom.secrets.INSTAGRAM_CLIENT_ID}
    INSTAGRAM_CLIENT_SECRET: ${self:custom.secrets.INSTAGRAM_CLIENT_SECRET}
    INSTAGRAM_REDIRECT_URI: ${self:custom.secrets.INSTAGRAM_REDIRECT_URI}
    INSTAGRAM_HTTP_REDIRECT: ${self:custom.secrets.INSTAGRAM_HTTP_REDIRECT}

# Enable auto-packing of external modules
custom:
  contentCompression: 1024
  webpack:
    webpackConfig: 'webpack.config.js' # Name of webpack configuration file
    includeModules: true # Node modules configuration for packaging
    packager: 'yarn' # Packager that will be used to package your external modules
  config:
    CACHE_INSTANCE_SIZE: cache.t2.micro
  secrets: ${ssm:/aws/reference/secretsmanager/identitylink~true}

functions:
  diddoc:
    handler: src/api_handler.diddoc
    timeout: 30
    vpc:
      securityGroupIds:
        - Fn::GetAtt: [ ServerlessSecurityGroup, GroupId ]
      subnetIds:
        - Ref: PrivateSubnetA
    events:
      - http:
          method: get
          cors: true
          path: .well-known/did.json
  request-github:
    handler: src/api_handler.request_github
    timeout: 30
    vpc:
      securityGroupIds:
        - Fn::GetAtt: [ ServerlessSecurityGroup, GroupId ]
      subnetIds:
        - Ref: PrivateSubnetA
    events:
      - http:
          method: post
          cors: true
          path: /api/v0/request-github
  verify-github:
    handler: src/api_handler.verify_github
    timeout: 30
    vpc:
      securityGroupIds:
        - Fn::GetAtt: [ ServerlessSecurityGroup, GroupId ]
      subnetIds:
        - Ref: PrivateSubnetA
    events:
      - http:
          method: post
          cors: true
          path: /api/v0/confirm-github
  request-discourse:
    handler: src/api_handler.request_discourse
    timeout: 30
    vpc:
      securityGroupIds:
        - Fn::GetAtt: [ ServerlessSecurityGroup, GroupId ]
      subnetIds:
        - Ref: PrivateSubnetA
    events:
      - http:
          method: post
          cors: true
          path: /api/v0/request-discourse
  verify-discourse:
    handler: src/api_handler.verify_discourse
    timeout: 30
    vpc:
      securityGroupIds:
        - Fn::GetAtt: [ ServerlessSecurityGroup, GroupId ]
      subnetIds:
        - Ref: PrivateSubnetA
    events:
      - http:
          method: post
          cors: true
          path: /api/v0/confirm-discourse
  request-twitter:
    handler: src/api_handler.request_twitter
    timeout: 30
    vpc:
      securityGroupIds:
        - Fn::GetAtt: [ ServerlessSecurityGroup, GroupId ]
      subnetIds:
        - Ref: PrivateSubnetA
    events:
      - http:
          method: post
          cors: true
          path: /api/v0/request-twitter
  request-instagram:
    handler: src/api_handler.request_instagram
    timeout: 30
    vpc:
      securityGroupIds:
        - Fn::GetAtt: [ ServerlessSecurityGroup, GroupId ]
      subnetIds:
        - Ref: PrivateSubnetA
    events:
      - http:
          method: get
          cors: true
          path: /api/v0/request-instagram
          request:
            parameters:
              querystrings:
                did: true
                username: true
  verify-twitter:
    handler: src/api_handler.verify_twitter
    timeout: 30
    vpc:
      securityGroupIds:
        - Fn::GetAtt: [ ServerlessSecurityGroup, GroupId ]
      subnetIds:
        - Ref: PrivateSubnetA
    events:
      - http:
          method: post
          cors: true
          path: /api/v0/confirm-twitter
  verify-discord:
    handler: src/api_handler.verify_discord
    timeout: 30
    vpc:
      securityGroupIds:
        - Fn::GetAtt: [ ServerlessSecurityGroup, GroupId ]
      subnetIds:
        - Ref: PrivateSubnetA
    events:
      - http:
          method: post
          cors: true
          path: /api/v0/confirm-discord
  verify-instagram:
    handler: src/api_handler.verify_instagram
    timeout: 30
    vpc:
      securityGroupIds:
        - Fn::GetAtt: [ ServerlessSecurityGroup, GroupId ]
      subnetIds:
        - Ref: PrivateSubnetA
    events:
      - http:
          method: post
          cors: true
          path: /api/v0/confirm-instagram

resources:
  Resources: ${file(cf-resources.yml)}  
  